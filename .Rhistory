head(boyaca_municipios)
# Graficar el mapa básico de Boyacá
tm_shape(boyaca_municipios) +
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Municipios de Boyacá")
#| message: false
#| include: false
# Leer la base de datos IPM de Boyacá
boyaca_ipm_municipios <- read.csv("datos/boyaca_ipm_municipios.csv")
# Verificar las primeras filas para asegurarse de que se cargó correctamente
head(boyaca_ipm_municipios)
#| include: false
# Convertir ambas columnas a tipo carácter para hacer la unión
boyaca_municipios$mpios <- as.character(boyaca_municipios$mpios)
boyaca_ipm_municipios$ID <- as.character(boyaca_ipm_municipios$ID)
# Unir el shapefile con los datos IPM usando la columna 'mpios' del shapefile y 'ID' del CSV
boyaca_municipios_ipm <- left_join(boyaca_municipios, boyaca_ipm_municipios, by = c("mpios" = "ID"))
# Verificar la unión para asegurarnos de que los datos se hayan combinado correctamente
head(boyaca_municipios_ipm)
# Crear el mapa coloreado por 'IPM Municipal'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Municipal", palette = "Reds", title = "% IPM Municipal") +  # Colorear según IPM Municipal
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM Total en Boyacá")
# Histograma de IPM Total
ggplot(boyaca_municipios_ipm, aes(x = IPM.Municipal)) +
geom_histogram(binwidth = 5, fill = "lightcoral", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM Total en Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) Total",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Cabeceras' (para tmap v3)
tm_shape(boyaca_municipios_ipm) +
tm_fill("Cabeceras", palette = "Blues", title = "% IPM Cabeceras") +  # Colorear según IPM Cabeceras
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM cabeceras en Boyacá")
# Histograma de IPM en Cabeceras Municipales
ggplot(boyaca_municipios_ipm, aes(x = Cabeceras)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Cabeceras Municipales de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Cabeceras",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Centros poblados y rural disperso'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Centros.poblados.y.rural.disperso", palette = "Greens", title = "% IPM CP y RD") +  # Colorear según IPM Centros Poblados
tm_borders() +
tm_layout(title = "Centros Poblados y Rural Disperso")
# Histograma de IPM en Centros Poblados y Rural Disperso
ggplot(boyaca_municipios_ipm, aes(x = IPM.Centros.poblados.y.rural.disperso)) +
geom_histogram(binwidth = 5, fill = "lightgreen", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Centros Poblados y Rural Disperso de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Centros Poblados y Rural Disperso",
y = "Frecuencia") +
theme_minimal()
# Calcular los promedios de IPM Total, IPM Cabeceras y IPM Rural
promedios <- boyaca_municipios_ipm %>%
summarise(
IPM_Total = mean(IPM.Municipal, na.rm = TRUE),
IPM_Cabeceras = mean(Cabeceras, na.rm = TRUE),
IPM_Rural = mean(IPM.Centros.poblados.y.rural.disperso, na.rm = TRUE)
)
# Convertir los promedios a formato largo para graficarlos
promedios_long <- data.frame(
Categoria = c("IPM Total", "IPM Cabeceras", "IPM Rural"),
Promedio = c(promedios$IPM_Total, promedios$IPM_Cabeceras, promedios$IPM_Rural)
)
# Crear gráfico de barras comparando los promedios
ggplot(promedios_long, aes(x = Categoria, y = Promedio, fill = Categoria)) +
geom_bar(stat = "identity", color = "black") +  # Bar chart
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +  # Custom colors
labs(title = "Comparación del Promedio del IPM en Boyacá",
x = "Categoría",
y = "Promedio del IPM") +
theme_minimal() +
geom_text(aes(label = round(Promedio, 2)), vjust = -0.5)  # Agregar etiquetas con los promedios
#| include: false
# Cargar la nueva base de datos del IDF
idf_data_new <- read.csv('datos/Nuevo__ndice_de_Desempe_o_Fiscal__municipios_-_DEPARTAMENTO_DE_BOYAC__20250701.csv')
# Verificar los primeros registros
head(idf_data_new)
#| include: false
# Cargar el archivo GeoJSON de los municipios de Boyacá
boyaca_municipios_geojson <- st_read('datos/Boyaca.geojson')
# Verificar las primeras filas
head(boyaca_municipios_geojson)
#| include: false
# Convertir la columna "Codigo_Municipio" a carácter en el IDF
idf_data_new$Codigo_Municipio <- as.character(idf_data_new$Codigo_Municipio)
# Verificar la conversión
head(idf_data_new$Codigo_Municipio)
#| include: false
# Eliminar puntos en ambas columnas
idf_data_new$Codigo_Municipio <- gsub("\\.", "", idf_data_new$Codigo_Municipio)
boyaca_municipios_geojson$mpios <- gsub("\\.", "", boyaca_municipios_geojson$mpios)
# Verificar las primeras filas de las columnas
head(idf_data_new$Codigo_Municipio)
head(boyaca_municipios_geojson$mpios)
#| include: false
# Unir los datos del IDF con el GeoJSON de Boyacá por "Codigo_Municipio"
boyaca_municipios_idf <- left_join(boyaca_municipios_geojson, idf_data_new, by = c("mpios" = "Codigo_Municipio"))
# Verificar la unión
head(boyaca_municipios_idf)
# Eliminar las filas correspondientes al año 2021 en el dataset idf_data_new
idf_data_new <- idf_data_new %>%
filter(año != 2021)
# Verificar que los datos del año 2021 han sido eliminados
unique(idf_data_new$año)
# Crear el mapa coroplético del IDF
tm_shape(boyaca_municipios_idf) +
tm_fill("IDF_2020", palette = "RdYlGn", title = "Índice de Desempeño Fiscal 2020") +
tm_borders() +
tm_layout(title = "Índice de Desempeño Fiscal")
# Filtrar los datos para excluir el año 2021
boyaca_municipios_sin_2021 <- boyaca_municipios_idf %>%
filter(año != 2021)
# Filtrar las categorías 'Detección y sin Información' y 'Sin Información'
boyaca_municipios_sin_2021_filtrado <- boyaca_municipios_sin_2021 %>%
filter(Clasificacion != "Detección y sin Información, completa para el análisis" &
Clasificacion != "Sin Información, completa para el análisis")
# Crear el gráfico de barras con los datos sin el año 2021 y sin las categorías excluidas
ggplot(boyaca_municipios_sin_2021_filtrado, aes(x = Clasificacion)) +
geom_bar(fill = "lightblue", color = "black", alpha = 0.7) +
labs(title = "Clasificación Fiscal de los Municipios de Boyacá (2020)",
x = "Clasificación Fiscal",
y = "Número de Municipios") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Renombrar la columna 'mpios' a 'Codigo_Municipio' en el IPM
colnames(boyaca_municipios_ipm)[colnames(boyaca_municipios_ipm) == "mpios"] <- "Codigo_Municipio"
# Unir los datos del IDF con los datos del IPM por "Codigo_Municipio"
boyaca_municipios_idf_ipm <- left_join(idf_data_new, boyaca_municipios_ipm, by = "Codigo_Municipio")
# Verificar la unión
head(boyaca_municipios_idf_ipm)
# =========================================================
# Carga de paquetes y configuración general
# =========================================================
library(tidyverse)
library(readxl)
library(janitor)
library(sf)
library(tmap)
library(geosphere)
library(writexl)
options(scipen = 999)
tmap_mode("plot")
#| include: false
# Cargar el shapefile de Boyacá
boyaca_municipios <- st_read("datos/Boyaca.geojson")
# Ver los primeros registros de la capa
head(boyaca_municipios)
# Graficar el mapa básico de Boyacá
tm_shape(boyaca_municipios) +
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Municipios de Boyacá")
#| message: false
#| include: false
# Leer la base de datos IPM de Boyacá
boyaca_ipm_municipios <- read.csv("datos/boyaca_ipm_municipios.csv")
# Verificar las primeras filas para asegurarse de que se cargó correctamente
head(boyaca_ipm_municipios)
#| include: false
# Convertir ambas columnas a tipo carácter para hacer la unión
boyaca_municipios$mpios <- as.character(boyaca_municipios$mpios)
boyaca_ipm_municipios$ID <- as.character(boyaca_ipm_municipios$ID)
# Unir el shapefile con los datos IPM usando la columna 'mpios' del shapefile y 'ID' del CSV
boyaca_municipios_ipm <- left_join(boyaca_municipios, boyaca_ipm_municipios, by = c("mpios" = "ID"))
# Verificar la unión para asegurarnos de que los datos se hayan combinado correctamente
head(boyaca_municipios_ipm)
# Crear el mapa coloreado por 'IPM Municipal'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Municipal", palette = "Reds", title = "% IPM Municipal") +  # Colorear según IPM Municipal
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM Total en Boyacá")
# Histograma de IPM Total
ggplot(boyaca_municipios_ipm, aes(x = IPM.Municipal)) +
geom_histogram(binwidth = 5, fill = "lightcoral", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM Total en Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) Total",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Cabeceras' (para tmap v3)
tm_shape(boyaca_municipios_ipm) +
tm_fill("Cabeceras", palette = "Blues", title = "% IPM Cabeceras") +  # Colorear según IPM Cabeceras
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM cabeceras en Boyacá")
# Histograma de IPM en Cabeceras Municipales
ggplot(boyaca_municipios_ipm, aes(x = Cabeceras)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Cabeceras Municipales de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Cabeceras",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Centros poblados y rural disperso'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Centros.poblados.y.rural.disperso", palette = "Greens", title = "% IPM CP y RD") +  # Colorear según IPM Centros Poblados
tm_borders() +
tm_layout(title = "Centros Poblados y Rural Disperso")
# Histograma de IPM en Centros Poblados y Rural Disperso
ggplot(boyaca_municipios_ipm, aes(x = IPM.Centros.poblados.y.rural.disperso)) +
geom_histogram(binwidth = 5, fill = "lightgreen", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Centros Poblados y Rural Disperso de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Centros Poblados y Rural Disperso",
y = "Frecuencia") +
theme_minimal()
# Calcular los promedios de IPM Total, IPM Cabeceras y IPM Rural
promedios <- boyaca_municipios_ipm %>%
summarise(
IPM_Total = mean(IPM.Municipal, na.rm = TRUE),
IPM_Cabeceras = mean(Cabeceras, na.rm = TRUE),
IPM_Rural = mean(IPM.Centros.poblados.y.rural.disperso, na.rm = TRUE)
)
# Convertir los promedios a formato largo para graficarlos
promedios_long <- data.frame(
Categoria = c("IPM Total", "IPM Cabeceras", "IPM Rural"),
Promedio = c(promedios$IPM_Total, promedios$IPM_Cabeceras, promedios$IPM_Rural)
)
# Crear gráfico de barras comparando los promedios
ggplot(promedios_long, aes(x = Categoria, y = Promedio, fill = Categoria)) +
geom_bar(stat = "identity", color = "black") +  # Bar chart
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +  # Custom colors
labs(title = "Comparación del Promedio del IPM en Boyacá",
x = "Categoría",
y = "Promedio del IPM") +
theme_minimal() +
geom_text(aes(label = round(Promedio, 2)), vjust = -0.5)  # Agregar etiquetas con los promedios
#| include: false
# Cargar la nueva base de datos del IDF
idf_data_new <- read.csv('datos/Nuevo__ndice_de_Desempe_o_Fiscal__municipios_-_DEPARTAMENTO_DE_BOYAC__20250701.csv')
# Verificar los primeros registros
head(idf_data_new)
#| include: false
# Cargar el archivo GeoJSON de los municipios de Boyacá
boyaca_municipios_geojson <- st_read('datos/Boyaca.geojson')
# Verificar las primeras filas
head(boyaca_municipios_geojson)
#| include: false
# Convertir la columna "Codigo_Municipio" a carácter en el IDF
idf_data_new$Codigo_Municipio <- as.character(idf_data_new$Codigo_Municipio)
# Verificar la conversión
head(idf_data_new$Codigo_Municipio)
#| include: false
# Eliminar puntos en ambas columnas
idf_data_new$Codigo_Municipio <- gsub("\\.", "", idf_data_new$Codigo_Municipio)
boyaca_municipios_geojson$mpios <- gsub("\\.", "", boyaca_municipios_geojson$mpios)
# Verificar las primeras filas de las columnas
head(idf_data_new$Codigo_Municipio)
head(boyaca_municipios_geojson$mpios)
#| include: false
# Unir los datos del IDF con el GeoJSON de Boyacá por "Codigo_Municipio"
boyaca_municipios_idf <- left_join(boyaca_municipios_geojson, idf_data_new, by = c("mpios" = "Codigo_Municipio"))
# Verificar la unión
head(boyaca_municipios_idf)
# Eliminar las filas correspondientes al año 2021 en el dataset idf_data_new
idf_data_new <- idf_data_new %>%
filter(año != 2021)
# Verificar que los datos del año 2021 han sido eliminados
unique(idf_data_new$año)
# Crear el mapa coroplético del IDF
tm_shape(boyaca_municipios_idf) +
tm_fill("IDF_2020", palette = "RdYlGn", title = "Índice de Desempeño Fiscal 2020") +
tm_borders() +
tm_layout(title = "Índice de Desempeño Fiscal")
# Filtrar los datos para excluir el año 2021
boyaca_municipios_sin_2021 <- boyaca_municipios_idf %>%
filter(año != 2021)
# Filtrar las categorías 'Detección y sin Información' y 'Sin Información'
boyaca_municipios_sin_2021_filtrado <- boyaca_municipios_sin_2021 %>%
filter(Clasificacion != "Detección y sin Información, completa para el análisis" &
Clasificacion != "Sin Información, completa para el análisis")
# Crear el gráfico de barras con los datos sin el año 2021 y sin las categorías excluidas
ggplot(boyaca_municipios_sin_2021_filtrado, aes(x = Clasificacion)) +
geom_bar(fill = "lightblue", color = "black", alpha = 0.7) +
labs(title = "Clasificación Fiscal de los Municipios de Boyacá (2020)",
x = "Clasificación Fiscal",
y = "Número de Municipios") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Renombrar la columna 'mpios' a 'Codigo_Municipio' en el IPM
colnames(boyaca_municipios_ipm)[colnames(boyaca_municipios_ipm) == "mpios"] <- "Codigo_Municipio"
# Unir los datos del IDF con los datos del IPM por "Codigo_Municipio"
boyaca_municipios_idf_ipm <- left_join(idf_data_new, boyaca_municipios_ipm, by = "Codigo_Municipio")
# Verificar la unión
head(boyaca_municipios_idf_ipm)
municipios <- st_read("datos/Boyaca.geojson", quiet = TRUE) %>%
st_transform(4326)
centroides <- st_centroid(municipios)
coords <- st_coordinates(centroides)
municipios <- municipios %>%
mutate(lon = coords[,1], lat = coords[,2])
coord_tunja <- municipios %>%
filter(str_to_upper(nombre_mpi) == "TUNJA") %>%
select(lon, lat) %>%
as.data.frame()
municipios <- municipios %>%
mutate(
distancia_tunja_km = map_dbl(
1:n(),
~ distHaversine(
c(lon[.x], lat[.x]),
c(coord_tunja$lon, coord_tunja$lat)
) / 1000
)
)
{r}
tmap_mode("plot")
tmap_options(component.autoscale = FALSE)
tm_shape(municipios) +
tm_polygons(
col = "distancia_tunja_km",
palette = "YlOrRd",
style = "quantile",
title = "Distancia a Tunja (km)"
) +
tm_borders(col = "white", lwd = 0.5) +
tm_shape(municipios %>% filter(str_to_upper(nombre_mpi) == "TUNJA")) +
tm_borders(col = "gray", lwd = 2) +
tm_fill(col = "gray") +
tm_text("TUNJA", size = 0.5, col = "black") +
tm_layout(
main.title = "Distancia geográfica desde cada municipio hasta Tunja",
main.title.size = 1.2,
main.title.position = "center",
legend.outside = TRUE,
legend.title.size = 1,
legend.text.size = 0.8,
frame = FALSE,
outer.margins = c(0.05, 0.05, 0.15, 0.05),
inner.margins = c(0.05, 0.05, 0.05, 0.05)
)
ggplot(boyaca_municipios_idf_ipm, aes(x = IPM.Municipal, y = IDF_2020)) +
geom_point(color = "blue", alpha = 0.6) +
labs(title = "",
x = "Índice de Pobreza Multidimensional (IPM)",
y = "Índice de Desempeño Fiscal (IDF) 2020") +
theme_minimal()
ggplot(boyaca_municipios_idf_ipm, aes(x = IPM.Municipal, y = IDF_2020)) +
geom_point(color = "blue", alpha = 0.6) +
labs(title = "Si",
x = "Índice de Pobreza Multidimensional (IPM)",
y = "Índice de Desempeño Fiscal (IDF) 2020") +
theme_minimal()
ggplot(boyaca_municipios_idf_ipm, aes(x = IPM.Municipal, y = IDF_2020)) +
geom_point(color = "blue", alpha = 0.6) +
labs(title = "Comparación entre IDF e IPM en Boyacá",
x = "Índice de Pobreza Multidimensional (IPM)",
y = "Índice de Desempeño Fiscal (IDF) 2020") +
theme_minimal()
# =========================================================
# Carga de paquetes y configuración general
# =========================================================
library(tidyverse)
library(readxl)
library(janitor)
library(sf)
library(tmap)
library(geosphere)
library(writexl)
options(scipen = 999)
tmap_mode("plot")
#| include: false
# Cargar el shapefile de Boyacá
boyaca_municipios <- st_read("datos/Boyaca.geojson")
# Ver los primeros registros de la capa
head(boyaca_municipios)
# Graficar el mapa básico de Boyacá
tm_shape(boyaca_municipios) +
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Municipios de Boyacá")
#| message: false
#| include: false
# Leer la base de datos IPM de Boyacá
boyaca_ipm_municipios <- read.csv("datos/boyaca_ipm_municipios.csv")
# Verificar las primeras filas para asegurarse de que se cargó correctamente
head(boyaca_ipm_municipios)
#| include: false
# Convertir ambas columnas a tipo carácter para hacer la unión
boyaca_municipios$mpios <- as.character(boyaca_municipios$mpios)
boyaca_ipm_municipios$ID <- as.character(boyaca_ipm_municipios$ID)
# Unir el shapefile con los datos IPM usando la columna 'mpios' del shapefile y 'ID' del CSV
boyaca_municipios_ipm <- left_join(boyaca_municipios, boyaca_ipm_municipios, by = c("mpios" = "ID"))
# Verificar la unión para asegurarnos de que los datos se hayan combinado correctamente
head(boyaca_municipios_ipm)
# Crear el mapa coloreado por 'IPM Municipal'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Municipal", palette = "Reds", title = "% IPM Municipal") +  # Colorear según IPM Municipal
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM Total en Boyacá")
# Histograma de IPM Total
ggplot(boyaca_municipios_ipm, aes(x = IPM.Municipal)) +
geom_histogram(binwidth = 5, fill = "lightcoral", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM Total en Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) Total",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Cabeceras' (para tmap v3)
tm_shape(boyaca_municipios_ipm) +
tm_fill("Cabeceras", palette = "Blues", title = "% IPM Cabeceras") +  # Colorear según IPM Cabeceras
tm_borders() +  # Mostrar los límites de los municipios
tm_layout(title = "Mapa de IPM cabeceras en Boyacá")
# Histograma de IPM en Cabeceras Municipales
ggplot(boyaca_municipios_ipm, aes(x = Cabeceras)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Cabeceras Municipales de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Cabeceras",
y = "Frecuencia") +
theme_minimal()
# Crear el mapa coloreado por 'IPM Centros poblados y rural disperso'
tm_shape(boyaca_municipios_ipm) +
tm_fill("IPM.Centros.poblados.y.rural.disperso", palette = "Greens", title = "% IPM CP y RD") +  # Colorear según IPM Centros Poblados
tm_borders() +
tm_layout(title = "Centros Poblados y Rural Disperso")
# Histograma de IPM en Centros Poblados y Rural Disperso
ggplot(boyaca_municipios_ipm, aes(x = IPM.Centros.poblados.y.rural.disperso)) +
geom_histogram(binwidth = 5, fill = "lightgreen", color = "black", alpha = 0.7) +
labs(title = "Distribución del IPM en Centros Poblados y Rural Disperso de Boyacá",
x = "Índice de Pobreza Multidimensional (IPM) en Centros Poblados y Rural Disperso",
y = "Frecuencia") +
theme_minimal()
# Calcular los promedios de IPM Total, IPM Cabeceras y IPM Rural
promedios <- boyaca_municipios_ipm %>%
summarise(
IPM_Total = mean(IPM.Municipal, na.rm = TRUE),
IPM_Cabeceras = mean(Cabeceras, na.rm = TRUE),
IPM_Rural = mean(IPM.Centros.poblados.y.rural.disperso, na.rm = TRUE)
)
# Convertir los promedios a formato largo para graficarlos
promedios_long <- data.frame(
Categoria = c("IPM Total", "IPM Cabeceras", "IPM Rural"),
Promedio = c(promedios$IPM_Total, promedios$IPM_Cabeceras, promedios$IPM_Rural)
)
# Crear gráfico de barras comparando los promedios
ggplot(promedios_long, aes(x = Categoria, y = Promedio, fill = Categoria)) +
geom_bar(stat = "identity", color = "black") +  # Bar chart
scale_fill_manual(values = c("skyblue", "lightgreen", "lightcoral")) +  # Custom colors
labs(title = "Comparación del Promedio del IPM en Boyacá",
x = "Categoría",
y = "Promedio del IPM") +
theme_minimal() +
geom_text(aes(label = round(Promedio, 2)), vjust = -0.5)  # Agregar etiquetas con los promedios
#| include: false
# Cargar la nueva base de datos del IDF
idf_data_new <- read.csv('datos/Nuevo__ndice_de_Desempe_o_Fiscal__municipios_-_DEPARTAMENTO_DE_BOYAC__20250701.csv')
# Verificar los primeros registros
head(idf_data_new)
#| include: false
# Cargar el archivo GeoJSON de los municipios de Boyacá
boyaca_municipios_geojson <- st_read('datos/Boyaca.geojson')
# Verificar las primeras filas
head(boyaca_municipios_geojson)
#| include: false
# Convertir la columna "Codigo_Municipio" a carácter en el IDF
idf_data_new$Codigo_Municipio <- as.character(idf_data_new$Codigo_Municipio)
# Verificar la conversión
head(idf_data_new$Codigo_Municipio)
#| include: false
# Eliminar puntos en ambas columnas
idf_data_new$Codigo_Municipio <- gsub("\\.", "", idf_data_new$Codigo_Municipio)
boyaca_municipios_geojson$mpios <- gsub("\\.", "", boyaca_municipios_geojson$mpios)
# Verificar las primeras filas de las columnas
head(idf_data_new$Codigo_Municipio)
head(boyaca_municipios_geojson$mpios)
#| include: false
# Unir los datos del IDF con el GeoJSON de Boyacá por "Codigo_Municipio"
boyaca_municipios_idf <- left_join(boyaca_municipios_geojson, idf_data_new, by = c("mpios" = "Codigo_Municipio"))
# Verificar la unión
head(boyaca_municipios_idf)
#| include: false
# Eliminar las filas correspondientes al año 2021 en el dataset idf_data_new
idf_data_new <- idf_data_new %>%
filter(año != 2021)
# Verificar que los datos del año 2021 han sido eliminados
unique(idf_data_new$año)
# Crear el mapa coroplético del IDF
tm_shape(boyaca_municipios_idf) +
tm_fill("IDF_2020", palette = "RdYlGn", title = "Índice de Desempeño Fiscal 2020") +
tm_borders() +
tm_layout(title = "Índice de Desempeño Fiscal")
# Filtrar los datos para excluir el año 2021
boyaca_municipios_sin_2021 <- boyaca_municipios_idf %>%
filter(año != 2021)
# Filtrar las categorías 'Detección y sin Información' y 'Sin Información'
boyaca_municipios_sin_2021_filtrado <- boyaca_municipios_sin_2021 %>%
filter(Clasificacion != "Detección y sin Información, completa para el análisis" &
Clasificacion != "Sin Información, completa para el análisis")
# Crear el gráfico de barras con los datos sin el año 2021 y sin las categorías excluidas
ggplot(boyaca_municipios_sin_2021_filtrado, aes(x = Clasificacion)) +
geom_bar(fill = "lightblue", color = "black", alpha = 0.7) +
labs(title = "Clasificación Fiscal de los Municipios de Boyacá (2020)",
x = "Clasificación Fiscal",
y = "Número de Municipios") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#| include: false
# Renombrar la columna 'mpios' a 'Codigo_Municipio' en el IPM
colnames(boyaca_municipios_ipm)[colnames(boyaca_municipios_ipm) == "mpios"] <- "Codigo_Municipio"
# Unir los datos del IDF con los datos del IPM por "Codigo_Municipio"
boyaca_municipios_idf_ipm <- left_join(idf_data_new, boyaca_municipios_ipm, by = "Codigo_Municipio")
# Verificar la unión
head(boyaca_municipios_idf_ipm)
ggplot(boyaca_municipios_idf_ipm, aes(x = IPM.Municipal, y = IDF_2020)) +
geom_point(color = "blue", alpha = 0.6) +
labs(title = "Comparación entre IDF e IPM en Boyacá",
x = "Índice de Pobreza Multidimensional (IPM)",
y = "Índice de Desempeño Fiscal (IDF) 2020") +
theme_minimal()
ggplot(boyaca_municipios_idf_ipm, aes(x = IPM.Municipal, y = IDF_2020)) +
geom_point(color = "blue", alpha = 0.6) +
labs(title = "",
x = "Índice de Pobreza Multidimensional (IPM)",
y = "Índice de Desempeño Fiscal (IDF) 2020") +
theme_minimal()
